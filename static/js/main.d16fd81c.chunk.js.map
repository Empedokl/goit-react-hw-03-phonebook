{"version":3,"sources":["Contacts/ContactsStyledComponent.js","Contacts/Contacts.js","ContactForm/ContactFormStyledComponent.js","ContactForm/ContactForm.js","Filter/FilterStyledComponents.js","Filter/Filter.js","App.js","index.js"],"names":["List","styled","ul","ListItem","li","Contacts","this","props","contacts","onDeleteContact","map","id","name","number","type","onClick","Component","Form","form","FormLabel","label","FormInput","input","FormButton","button","ContactForm","state","handleInput","target","value","setState","handleSubmit","e","preventDefault","onAddContact","uuidv4","onSubmit","onChange","placeholder","required","FilterContainer","Filter","onChangeFilter","App","filter","addContact","contact","prevState","some","el","alert","handleButtonDelete","contactId","handleFilter","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","visibleContacts","className","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d16fd81c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List, ListItem } from './ContactsStyledComponent';\n\nexport default class Contacts extends Component {\n  static propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }),\n    ),\n  };\n\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    return (\n      <List>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={id}>\n              <span>{name}:</span>\n              <span>{number}</span>\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                Delete\n              </button>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n`;\n\nexport const FormLabel = styled.label`\n  display: block;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  width: 200px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #ccc;\n  background: #f6f6f6;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const FormButton = styled.button`\n  width: 90px;\n  height: 28px;\n  border: 1px solid #ccc;\n  background: #fff;\n  color: #666;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:active {\n    margin-top: 1px;\n    margin-bottom: -1px;\n    zoom: 1;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactFormStyledComponent';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInput = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact({ id: uuidv4(), name, number });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormLabel>\n          Name\n          <FormInput\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleInput}\n            placeholder=\"Name*\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormInput\n            type=\"number\"\n            value={number}\n            name=\"number\"\n            onChange={this.handleInput}\n            placeholder=\"111-11-11*\"\n            required\n          />\n        </FormLabel>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </Form>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  font-size: 18px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterContainer } from './FilterStyledComponents';\n\nfunction Filter({ name, onChangeFilter }) {\n  return (\n    <FilterContainer>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={name}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </FilterContainer>\n  );\n}\n\nFilter.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport Contacts from './Contacts';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts)\n      this.setState({\n        contacts: parseContacts,\n      });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n  \n  addContact = contact => {\n    this.setState(prevState => {\n      if (prevState.contacts.some(el => el.name === contact.name)) {\n        alert(`${contact.name} is already in contacts!`);\n        return;\n      }\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  handleButtonDelete = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(\n          contact => contact.id !== contactId,\n        ),\n      };\n    });\n  };\n\n  handleFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <section className=\"section\">\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && (\n          <Filter name={filter} onChangeFilter={this.handleFilter} />\n        )}\n        <Contacts\n          contacts={visibleContacts}\n          onDeleteContact={this.handleButtonDelete}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}